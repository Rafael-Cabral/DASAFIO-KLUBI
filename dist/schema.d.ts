export declare const typeDefs = "\n  scalar Cursor\n\n  type Pessoa {\n    id: ID!\n    nome: String!\n    cpfMasked: String!\n    email: String!\n    telefone: String!\n  }\n\n  type Plano {\n    id: ID!\n    nome: String!\n    valor_credito: Int!\n    parcelas: Int!\n    taxa_adm_percentual: Int!\n  }\n\n  type Contrato {\n    id: ID!\n    pessoa: Pessoa!\n    plano: Plano!\n    data_contratacao: String!\n    status: String!\n    parcelas_pagas: Int!\n  }\n\n  type EdgePessoa { node: Pessoa!, cursor: Cursor! }\n  type ConnPessoa { edges: [EdgePessoa!]!, endCursor: Cursor, hasNextPage: Boolean! }\n\n  type EdgeContrato { node: Contrato!, cursor: Cursor! }\n  type ConnContrato { edges: [EdgeContrato!]!, endCursor: Cursor, hasNextPage: Boolean! }\n\n  type EdgePlano { node: Plano!, cursor: Cursor! }\n  type ConnPlano { edges: [EdgePlano!]!, endCursor: Cursor, hasNextPage: Boolean! }\n\n  type ContratosPorStatus { status: String!, total: Int! }\n\n  type Query {\n    pessoas(q: String, first: Int = 20, after: Cursor): ConnPessoa!\n    pessoaPorCpf(cpf: String!): Pessoa\n    planos(first: Int = 20, after: Cursor, min_valor: Int, max_valor: Int, parcelas: Int): ConnPlano!\n    contratosPorPessoa(pessoaId: ID!, status: String, first: Int = 20, after: Cursor): ConnContrato!\n    agregadosContratos: [ContratosPorStatus!]!\n  }\n\n  type Mutation {\n    criarPessoa(nome: String!, cpf: String!, email: String!, telefone: String!): Pessoa!\n    criarContrato(pessoaId: ID!, planoId: ID!): Contrato!\n    atualizarStatusContrato(contratoId: ID!, status: String!): Contrato!\n  }\n";
//# sourceMappingURL=schema.d.ts.map